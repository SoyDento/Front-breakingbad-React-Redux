{"version":3,"sources":["styles/Home.module.css","styles/NavBar.module.css","styles/CreateChar.module.css","styles/Card.module.css","styles/Characters.module.css","styles/EpisodeDetail.module.css","styles/Episodes.module.css","img/logo.png","actions/index.js","img/spinner.gif","components/Spinner.js","components/Home.js","components/NavBar.js","components/Card.js","components/Paginated.js","components/SearchBar.js","components/Characters.js","components/CharacterDetail.js","Utils/validateChg.js","components/Episodes.js","components/EpisodeDetail.js","Utils/validate.js","components/CreateChar.js","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","ADD_QUOTE","GET_CHARACTER_DETAIL","EMPTY_CHARACTER_DETAIL","GET_CHARACTERS","GET_EPISODES","EMPTY_EPISODE_DETAIL","GET_EPISODE_DETAIL","FILTER_BY_VALUES","FILTER_CREATED","GET_NAME_CHAR","GET_OCCUPATIONS","POST_CHARACTER","ORDER_BY_NAME","GET_API_CHARS","GET_DB_CHARS","REMOVE_CHAR","CLOSE_CHAR","CHANGE_AT","getApiChars","dispatch","fetch","then","res","json","type","payload","Spinner","src","spinner","style","width","margin","display","alt","connect","state","addQuote","catch","error","console","props","useEffect","setTimeout","log","quote","className","s","Home","logo","HomeLogo","author","series","esp","pie","NavBar","navbar","link","to","Component","Card","id","name","img","created_DB","closeChar","removeChar","card","image","bot","value","onClick","e","Paginated","charactPerPage","allCharacters","paginado","pagNumbers","i","Math","ceil","push","map","number","SearchBar","handleInputChange","preventDefault","setState","target","handleSubmit","getNameChar","placeholder","onChange","n","Characters","useDispatch","allChar","useSelector","characters","React","useState","page","setPage","order","setOrder","indexOfLastChar","indexOfFirstChar","currentChar","length","slice","axios","get","data","arr","forEach","o","char_id","nickname","birthday","status","occupation","occupations","resp","handleClick","ejectClose","idChar","onRemove","alert","delete","handleSort","handleFilterStatus","handleFilterCreat","numeroPagina","CharactersList","c","CharacterDetail","handleChange","handleSelect","attribute","objError","errors","test","includes","validateChg","JSON","stringify","changeAtrib","characterDetail","params","match","this","emptyCharacterDetail","getCharacterDetail","onSubmit","autoComplete","toString","obj","valor","put","Episodes","allEpisodes","episodes","setEpisodes","segm","ep","ss","split","shift","ser","join","filter","season","orderEpisodes","boxFlex","containnn","line","title","but","Episodes__list","episode","index","items","episode_id","EpisodeDetail","episodeDetail","getEpisodeDetail","bgk","EpisodeDetailContainer","EpisodeDetailData","air_date","character","validate","CreateChar","occupationsStore","history","useHistory","input","setInput","setError","handleCheck","body","post","response","bakg","cont2","bannerText","cards","cont3","inpt","dangerInp","validInp","danger","valid","cont4","el","dsdfd","handleDelete","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","apiChars","dbChars","outIDcharacter","rootReducer","action","statusFilter","allChs","createdFilter","sortedArr","sort","x","y","newChar","chars","allChars","store","createStore","composeWithDevTools","applyMiddleware","thunk","dotenv","config","defaults","baseURL","process","REACT_APP_API","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6cbe60f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__rL37h\",\"HomeLogo\":\"Home_HomeLogo__2OVZN\",\"esp\":\"Home_esp__2WiqC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__1FBVO\",\"link\":\"NavBar_link__3q8cT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bakg\":\"CreateChar_bakg__BM-5M\",\"bannerText\":\"CreateChar_bannerText__T5Gql\",\"cards\":\"CreateChar_cards__1nUh7\",\"cont2\":\"CreateChar_cont2__3-4o4\",\"titleAdd\":\"CreateChar_titleAdd__3T2Fi\",\"danger\":\"CreateChar_danger__2fz7P\",\"valid\":\"CreateChar_valid__tOqI5\",\"dangerInp\":\"CreateChar_dangerInp__Ldhgt\",\"validInp\":\"CreateChar_validInp__boLkk\",\"inpt\":\"CreateChar_inpt__1IQ8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bot\":\"Card_bot__2psPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Characters\":\"Characters_Characters__2zPF9\",\"CharactersList\":\"Characters_CharactersList__11cCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EpisodeDetailContainer\":\"EpisodeDetail_EpisodeDetailContainer__3wXp-\",\"EpisodeDetailData\":\"EpisodeDetail_EpisodeDetailData__XqInO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Episodes\":\"Episodes_Episodes__xzsjB\",\"containnn\":\"Episodes_containnn__Q6Pfh\",\"boxFlex\":\"Episodes_boxFlex__3qk8I\",\"title\":\"Episodes_title__1RZIY\",\"line\":\"Episodes_line__2xlBY\",\"but\":\"Episodes_but__3gK-V\",\"Episodes__list\":\"Episodes_Episodes__list__2ttGd\",\"items\":\"Episodes_items__3RpyM\"};","export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import axios from \"axios\";\r\n\r\nexport const ADD_QUOTE = \"ADD_QUOTE\";\r\n\r\nexport const GET_CHARACTER_DETAIL = 'GET_CHARACTER_DETAIL';\r\n\r\nexport const EMPTY_CHARACTER_DETAIL=\"EMPTY_CHARACTER_DETAIL\"\r\n\r\nexport const GET_CHARACTERS = 'GET_CHARACTERS';\r\n\r\nexport const GET_EPISODES = 'GET_EPISODES';\r\n\r\nexport const EMPTY_EPISODE_DETAIL = 'EMPTY_EPISODE_DETAIL';\r\n\r\nexport const GET_EPISODE_DETAIL = 'GET_EPISODE_DETAIL';\r\n\r\nexport const FILTER_BY_VALUES = 'FILTER_BY_VALUES';\r\n\r\nexport const FILTER_CREATED = 'FILTER_  CREATED';\r\n\r\nexport const GET_NAME_CHAR = 'GET_NAME_CHAR';\r\n\r\nexport const GET_OCCUPATIONS = 'GET_OCCUPATIONS';\r\n\r\nexport const POST_CHARACTER = 'POST_CHARACTER';\r\n\r\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\r\n\r\nexport const GET_API_CHARS = 'GET_API_CHARS';\r\n\r\nexport const GET_DB_CHARS = 'GET_DB_CHARS';\r\n\r\nexport const REMOVE_CHAR = 'REMOVE_CHAR';\r\n\r\nexport const CLOSE_CHAR = 'CLOSE_CHAR';\r\n\r\nexport const CHANGE_AT = 'CHANGE_AT';\r\n\r\n//====================================//\r\n\r\nexport function addQuote() {\r\n    return function(dispatch) {\r\n        //fetchear la Api en la ruta de las quotes random\r\n        return fetch('https://www.breakingbadapi.com/api/quote/random')\r\n        .then(res => res.json())\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: ADD_QUOTE, payload: json[0]})  })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n}\r\n\r\n//====================================//\r\n\r\nexport function getCharacters(){\r\n    return function(dispatch) {\r\n            dispatch({type: GET_CHARACTERS})\r\n    }\r\n}\r\n\r\n//===================================//\r\nexport function getCharacterDetail(id){\r\n    return function(dispatch) {\r\n      if (id.toString().includes('-')) {\r\n        return axios.get(`/characters/${id}`) // https://demo1bb.herokuapp.com\r\n        .then(res => res.data)\r\n        .then(res =>{\r\n          let obj = {\r\n            char_id: res.id,\r\n            name : res.name,\r\n            nickname : res.nickname,\r\n            birthday : res.birthday,\r\n            img : res.img,\r\n            status : res.status,\r\n            occupation : res.occupations.map(e=> e.name),\r\n            created_DB: res.created_DB\r\n          };\r\n          console.log(obj);\r\n          return obj;\r\n        })\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: GET_CHARACTER_DETAIL, payload: json})  })\r\n        .catch(error => console.error('Error:', error))\r\n      };\r\n        return fetch(`https://www.breakingbadapi.com/api/characters/${id}`)\r\n        .then(res => res.json())\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: GET_CHARACTER_DETAIL, payload: json[0]})  })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n}\r\n//====================================//\r\n\r\nexport function emptyCharacterDetail(){\r\n    return function(dispatch) {\r\n            dispatch({type: EMPTY_CHARACTER_DETAIL})\r\n\r\n    }\r\n}\r\n//====================================//\r\nexport function getEpisodes(){\r\n    return function(dispatch){\r\n        return fetch(`https://www.breakingbadapi.com/api/episodes`)\r\n        .then(res => res.json())\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: GET_EPISODES, payload: json})  })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n}\r\n//====================================//\r\n\r\nexport function emptyEpisodeDetail(){\r\n    return function(dispatch) {\r\n        dispatch({type: EMPTY_EPISODE_DETAIL})\r\n    }\r\n}\r\n//====================================//\r\n\r\nexport function getEpisodeDetail(id){\r\n    return function(dispatch){\r\n        return fetch(`https://www.breakingbadapi.com/api/episodes/${id}`)\r\n        .then(res => res.json())\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: GET_EPISODE_DETAIL, payload: json[0]})  })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n}\r\n//====================================//\r\n\r\nexport function filterCharByStatus (status) {\r\n  return{\r\n    type: 'FILTER_BY_VALUES',\r\n    payload: status\r\n  }\r\n}\r\n\r\nexport function filterCreated (payload) {\r\n  return{\r\n    type: 'FILTER_CREATED',\r\n    payload\r\n  }\r\n}\r\n\r\nexport function orderByName (payload) {\r\n  return{\r\n    type: 'ORDER_BY_NAME',\r\n    payload\r\n  }\r\n}\r\n\r\nexport function getNameChar(name){\r\n    return function(dispatch){\r\n        return fetch(`https://www.breakingbadapi.com/api/characters?name=${name}`)\r\n        .then(res => res.json())\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: GET_NAME_CHAR, payload: json})  })\r\n        .catch(error => console.error('Error:', error))\r\n    }\r\n}\r\n\r\nexport function getOccupations(){\r\n    return function(dispatch){\r\n        return axios.get(`/occupations`) // https://demo1bb.herokuapp.com\r\n        .then(res => res.data)\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: GET_OCCUPATIONS, payload: json})  })\r\n    }\r\n}\r\n\r\nexport function postCharacters(body){\r\n    return function(dispatch){\r\n        return axios.post(`/postCharacters`,body)\r\n          // fetch(`https://demo1bb.herokuapp.com/characters`, {\r\n          //   method: 'POST', // or 'PUT'\r\n          //   body: JSON.stringify(body), // data can be `string` or {object}!\r\n          //   headers:{\r\n          //     'Content-Type': 'application/json'\r\n          //   }\r\n          // })\r\n          .then(res => dispatch({type: POST_CHARACTER, payload: res.data}) )\r\n          .catch(error => console.error('Error:', error))\r\n          .then(response => console.log('Success:', response));\r\n    }\r\n}\r\n\r\nexport function getApiChars(){\r\n    return function(dispatch) {\r\n        //fetchear la Api en la ruta de las quotes random\r\n        return fetch(`https://www.breakingbadapi.com/api/characters`)\r\n        .then(res => res.json())\r\n        //despachar el objeto al reducer\r\n        .then(json => {  dispatch({type: GET_API_CHARS, payload: json})  })\r\n    }\r\n}\r\n\r\nexport function getDbChars(){\r\n    return function(dispatch) {\r\n        //fetchear la Api en la ruta de las quotes random\r\n        return axios.get(`/characters`)  // https://demo1bb.herokuapp.com\r\n        .then(res => res.data)\r\n        .then(res =>{\r\n          let arr = []\r\n          res.forEach( o=>{\r\n            arr.push({\r\n              char_id: o.id,\r\n              name : o.name,\r\n              nickname : o.nickname,\r\n              birthday : o.birthday,\r\n              img : o.img,\r\n              status : o.status,\r\n              occupation : o.occupations.map(e=> e.name),\r\n              created_DB: o.created_DB\r\n            })\r\n          })\r\n          // console.log(arr);\r\n          return arr;\r\n        })\r\n        .then(resp => {  dispatch({type: GET_DB_CHARS, payload: resp})  })\r\n    }\r\n}\r\n\r\nexport function removeChar (idChar) {\r\n  console.log(idChar);\r\n  return function(dispatch) {\r\n      // return fetch(`https://demo1bb.herokuapp.com/removeChar?id=${idChar}`, {\r\n      //       method: 'DELETE', // or 'PUT'\r\n      //       headers:{\r\n      //         'Content-Type': 'application/json'\r\n      //       }\r\n      //     })\r\n     return axios.delete(`/removeChar?id=${idChar}`)\r\n      .then(json => {  dispatch({type: REMOVE_CHAR, payload: json.data})  })\r\n  }\r\n}\r\n\r\nexport function closeCharacter (idChar) {\r\n  return{\r\n    type: CLOSE_CHAR,\r\n    payload: idChar\r\n  }\r\n}\r\n\r\nexport function changeAtrib (attribute, id, valor) {\r\n  console.log(id); console.log(attribute); console.log(valor);\r\n  return function(dispatch) {\r\n      // return fetch(`https://demo1bb.herokuapp.com/${attribute}?idChar=${id}&value=${valor}`, {\r\n      //       method: 'PUT',\r\n      //       headers:{ 'Content-Type': 'application/json' }\r\n      //     })\r\n      return axios.put(`/${attribute}?idChar=${id}&value=${valor}`)\r\n      .then(json => {  dispatch({type: CHANGE_AT, payload: json.data\r\n      })  })\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react';\nimport spinner from '../img/spinner.gif'\n\n\nconst Spinner = () => {\n    return (\n        <img \n            src={spinner} \n            style = {{width:'200px', margin:'auto', display:'block'}}\n            alt='Loading'\n        />\n    )\n}\n\nexport default Spinner;","import React, { useEffect } from \"react\";\nimport logo from \"../img/logo.png\";\nimport s from \"../styles/Home.module.css\";\nimport {addQuote} from \"../actions\";\nimport { connect } from \"react-redux\";\nimport Spinner from './Spinner';\n//import { useSelector } from \"react-redux\";\n\n//---- combinamos funcionalidades de Class Component a este Funcional Component y no usamos Hooks\n\nfunction Home(props) {\n  // useSelector para traerse el estado.\n  // const {quote} = useSelector((state)=>state)\n\n  // También se puede usar esta alternativa\n  // const quote = useSelector((state)=>state.quote)\n\n  // useDispatch para llamar a las acciones\n  // const dispatch = useDispatch();\n\n  useEffect(()=>{\n    //Forma de despachar la acción sin hook dispatch, sino con el \"conect\" de react-redux\n    setTimeout(function(){\n          props.addQuote();\n          console.log(\"Here is the quote\", props.quote);\n      }, 2500);\n  },[props])\n\n  return (\n    <div className={s.Home}>\n      <img src={logo} alt=\"\" className={s.HomeLogo} />\n      <hr/>\n      {\n        props.quote ?\n        <div className={s.Home}>\n          <h2>\"{props.quote.quote}\"</h2>\n          <h3>{props.quote.author}</h3>\n          <p>From: {props.quote.series}</p>\n        </div>\n        : <Spinner/>\n      }\n      <div className={s.esp}> </div>\n      <div className={s.pie}>\n          <h6>This is a practice of Matías Dentoni | \"I thank the creators of this exercise that has helped me to train myself in JS / REACT / REDUX / AJAX / POSTGREE / SQL / SEQUELIZE and the processes of Routing, Bundlers, Life Cycle Components\"</h6>\n      </div>\n    </div>\n  );\n}\n\n\n//Devolviendo un objeto, cuyo parámetro quote va a ser igual al quote del estado global\n//Con connect ese objeto devuelto pasa a formar parte de las props\n\nfunction mapStateToProps(state){\n  return {\n    ...state\n  }\n}\n\n\n//Actions\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addQuote: () => dispatch(addQuote())\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);\n","// import React from \"react\";\nimport React, { Component } from 'react';\nimport s from  \"../styles/NavBar.module.css\";\nimport { Link } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  render(){\n    return (\n      <div className={s.navbar}>\n        <div className={s.link}><Link to=\"/\">Home</Link></div>\n        <div className={s.link}><Link to=\"/characters\">Characters</Link></div>\n        <div className={s.link}><Link to=\"/episodes\">Episodes</Link></div>\n        <div className={s.link}><Link to=\"/create\">Create New Character</Link></div>\n      </div>\n    );\n  }\n};\n//\n// function NavBar() {\n//   return (\n//     <div className=\"navbar\">\n//       <div><Link to=\"/\">Home</Link></div>\n//       <div><Link to=\"/characters\">Characters</Link></div>\n//       <div><Link to=\"/episodes\">Episodes</Link></div>\n//       <div><Link to=\"/create\">Create New Character</Link></div>\n//     </div>\n//   );\n// }\n\nexport default NavBar;\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport s from '../styles/Card.module.css';\r\n\r\nexport default function Card ({id, name, img, created_DB, closeChar, removeChar}) {\r\n  // console.log(id);\r\n  return(\r\n    <div key={id} className={s.card}>\r\n      <Link to={`/characters/${id}`}>\r\n        <h3>{name}</h3>\r\n        <div className={s.image}>\r\n          <img src={img} alt='img not found'/>\r\n        </div>\r\n      </Link>\r\n      <div className={s.bot}>\r\n      {\r\n        (created_DB) ?\r\n          <button value={id} onClick={(e)=>removeChar(e)}>delete character from database</button>\r\n          :\r\n          <button value={id} onClick={(e)=>closeChar(e)}>close list character</button>\r\n      }\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Paginated ({charactPerPage, allCharacters, paginado}) {\r\n\r\n  let pagNumbers = [];\r\n\r\n  for (let i=1; i<=Math.ceil(allCharacters/charactPerPage); i++) {\r\n    pagNumbers.push(i)\r\n  };\r\n\r\n  return(\r\n    <nav>\r\n       {\r\n         pagNumbers && pagNumbers.map( number=>\r\n            <button onClick={()=> paginado(number)} key={number}> {number} </button>\r\n         )\r\n       }\r\n    </nav>\r\n  )\r\n};\r\n","// import React from 'react';\r\n// import { useDispatch } from 'react-redux';\r\nimport { getNameChar } from '../actions';\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchBar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: ''\r\n    };\r\n  };\r\n  handleInputChange = (e)=>{\r\n    e.preventDefault();\r\n    this.setState({name: e.target.value});\r\n  };\r\n  handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    this.props.getNameChar(this.state.name);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n      <input\r\n        type='text'\r\n        placeholder='search...'\r\n        onChange={(e)=>this.handleInputChange(e)}\r\n        />\r\n      <button onClick={(e)=>this.handleSubmit(e)} > Search </button>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        getNameChar: (n) => dispatch(getNameChar(n))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchBar);\r\n\r\n\r\n//\r\n// export default function SearchBar() {\r\n//\r\n//   const dispatch = useDispatch();\r\n//   const [name, setName] = React.useState('');\r\n//\r\n//   function handleInputChange(e) {\r\n//     e.preventDefault();\r\n//     setName(e.target.value);\r\n//     console.log(name);\r\n//   };\r\n//   function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     dispatch(getNameChar(name));\r\n//   };\r\n//\r\n//   return(\r\n//     <div>\r\n//     <input\r\n//       type='text'\r\n//       placeholder='search...'\r\n//       onChange={(e)=>handleInputChange(e)}\r\n//       />\r\n//     <button onClick={(e)=>handleSubmit(e)} > Search </button>\r\n//     </div>\r\n//   )\r\n// };\r\n","// import React, { useEffect, useState } from \"react\";\nimport React  from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCharacters,\n         filterCharByStatus,\n         filterCreated,\n         orderByName,\n         getDbChars,\n         getApiChars,\n         removeChar,\n         closeCharacter} from \"../actions\";\nimport Spinner from \"./Spinner\";\nimport Card from './Card.js';\nimport Paginated from './Paginated.js';\nimport SearchBar from './SearchBar';\n\nimport s from \"../styles/Characters.module.css\";\n\nfunction Characters() {\n\n  const dispatch = useDispatch();\n\n  const allChar = useSelector(state=> state.characters);\n  const [page, setPage] = React.useState(1);\n  const [order, setOrder] = React.useState('');\n\n  const charPerPage = 8;\n  const indexOfLastChar = page * charPerPage;\n  const indexOfFirstChar = indexOfLastChar - charPerPage;\n  const currentChar = allChar.length > 8 ? allChar.slice(indexOfFirstChar, indexOfLastChar) : allChar;\n\n  const paginated = (numeroPagina) => setPage(numeroPagina);\n\n  React.useEffect(()=>{\n      dispatch(getApiChars());\n      dispatch(getDbChars());\n  },[dispatch]);\n\n  /*\n    PISTA:\n    La dirección de donde vamos a tomar los datos es\n    https://www.breakingbadapi.com/api/characters?name=\n    Notesé que hay una query en la dirección. Lo que seguirá a esa query será un string\n    con un nombre o un apellido, y en base a eso la api realizará el filtrado.\n    En caso de no poner nada en la query, la api traerá a todos los personajes.\n  */\n\n  // const handleClick = (event) => {\n  //   event.preventDefault();\n  //   dispatch( getCharacters() );\n  // };\n  const handleFilterStatus = (e) => {\n    e.preventDefault();\n    dispatch( filterCharByStatus(e.target.value) );\n    setPage(1);\n  };\n  const handleFilterCreat = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    dispatch( filterCreated(e.target.value) );\n    setPage(1);\n  };\n  const handleSort = (e) => {\n    e.preventDefault();\n    dispatch( orderByName(e.target.value) );\n    setPage(1);\n    setOrder(`ordenado: ${e.target.value}`)\n  }\n  const handleClick = () => {\n    dispatch( getCharacters() )\n  };\n  const handleRestart = () => {\n    dispatch( getApiChars() );\n    setPage(1);\n  };\n  function ejectClose(e) {\n    e.preventDefault();\n    dispatch( closeCharacter(e.target.value) );\n  };\n  function onRemove(e) {\n    e.preventDefault();\n    alert('Are you sure you want to delete a character from the database?');\n    dispatch( removeChar(e.target.value) );\n  };\n\n  return (\n    <div className={s.Characters} key=\"Characters\">\n      <h1>List of Characters</h1>\n      <h5>{order}</h5>\n      <button onClick={()=> handleRestart()}>Restart</button>\n      <select key=\"order\" onChange={(e)=> handleSort(e)}>\n        <option value='ascending order'>ascending order</option>\n        <option value='reverse order'>reverse order</option>\n      </select >\n      <select onChange={(e)=> handleFilterStatus(e)}>\n        <option value='All'>All</option>\n        <option value='Alive'>Alive</option>\n        <option value='Deceased'>Deceased</option>\n        <option value='Unknown'>Unknown</option>\n        <option value='Presumed dead'>Presumed dead</option>\n      </select >\n      <select onChange={(e)=> handleFilterCreat(e)}>\n        <option value='api'>original characters</option>\n        <option value='created'>characters created</option>\n      </select >\n      <button onClick={()=> handleClick()}>All Characters</button>\n      <br/>\n      <br/>\n      <h3>Pages:</h3>\n      <Paginated\n        charactPerPage = {charPerPage}\n        allCharacters = {allChar.length}\n        paginado = {paginated}\n      />\n      <br/>\n      <div className={s.CharactersList} key=\"Characters__list\">\n        {/*El loading le va a dar un efecto de carga hasta que la peticion de la API llegue, no tocar!.*/}\n        {\n        !currentChar ? <Spinner /> :\n          currentChar.map((c) =>\n              <Card\n                key={c.char_id}\n                id={c.char_id}\n                name= {c.name}\n                img= {c.img}\n                created_DB = {c.created_DB? true : false }\n                closeChar= {ejectClose}\n                removeChar= {onRemove}\n              />\n          )\n        }\n      </div>\n      <br/>\n      <SearchBar />\n      <br/>\n      <div className={s.pie}>\n          <h6>This is a practice of Matías Dentoni | \"I thank the creators of this exercise that has helped me to train myself in JS / REACT / REDUX / AJAX / POSTGREE / SQL / SEQUELIZE and the processes of Routing, Bundlers, Life Cycle Components\"</h6>\n      </div>\n    </div>\n\n  );\n}\n\n\n\nexport default Characters;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n// import React, { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { Link, useParams } from \"react-router-dom\";\nimport {emptyCharacterDetail, getCharacterDetail, changeAtrib} from \"../actions\";\nimport Spinner from './Spinner'\nimport \"../styles/CharacterDetail.css\";\nimport validateChg from '../Utils/validateChg.js';\n\n\nexport class CharacterDetail extends Component {\n\n    constructor(props) { // console.log(props);\n      super(props);\n      this.state = {\n        attribute: '',\n        data: '',\n        params: this.props.match.params.id\n      };\n      // this.paginated = this.paginated.bind(this);\n      // this.ejectClose = this.ejectClose.bind(this);\n    };\n\n    componentDidMount(){\n        this.props.emptyCharacterDetail();  // o poner esto en un desmonte de componente\n        this.props.getCharacterDetail(this.state.params); // o this.props.match.params.id  como argumento\n    };\n    // componentWillUnmount(){\n    //   this.props.emptyCharacterDetail();\n    // }\n    handleChange = (e) => {\n      e.preventDefault();  // console.log(e.target.value);\n      this.setState({\n        ...this.state,\n        data: e.target.value});\n    };\n    handleSelect = (e) => {\n      e.preventDefault();  // console.log(e.target.value);\n      this.setState({\n        ...this.state,\n        attribute: e.target.value})\n    };\n    handleSubmit = (e)=> {\n      // e.preventDefault();\n      // console.log(attribute);  console.log(data);\n      let objError = validateChg({[this.state.attribute]: this.state.data});\n      if (objError.name || objError.nickname || objError.birthday || objError.img || objError.status ) {\n        alert(`Danger: ${ JSON.stringify(objError) } !!!`); // console.log(objError);\n      } else {\n        this.props.changeAtrib(this.state.attribute, this.props.characterDetail.char_id, this.state.data);\n        console.log(\"dispacho en cambio de atributo\");\n      };\n    };\n\n    render() {\n      return (\n        <div className=\"CharacterDetail\" key=\"character\">\n          <h1>Character Details</h1>\n          {!this.props.characterDetail ?  <Spinner/> :\n          <div key='detail'>\n\n            <h3>{this.props.characterDetail.name}</h3>\n\n            <img className=\"CharacterDetail__Photo\" src={this.props.characterDetail.img} alt=\"\" />\n\n            <p>nickname: {this.props.characterDetail.nickname}</p>\n            <p>birthday: {this.props.characterDetail.birthday}</p>\n            <p>status: {this.props.characterDetail.status}</p>\n            <div key='ocuppations'>\n              <p>occupations: </p>\n              <h5>\n              {\n                !this.props.characterDetail.occupation ? <Spinner/> :\n                  this.props.characterDetail.occupation.map(o=> ' - ' + o + ' - ')\n              }\n              </h5>\n            </div>\n\n                    {\n                      (!this.props.characterDetail.created_DB) ?  null :\n                      <div className='change'>\n                        <h3>modify character attributes</h3>\n\n                        <form className='formChange'  onSubmit={(e)=>this.handleSubmit(e)}>\n                          <select onChange={(e)=> this.handleSelect(e)}>\n                            <option value='none'>none</option>\n                            <option value='name'>name</option>\n                            <option value='nickname'>nickname</option>\n                            <option value='birthday'>birthday</option>\n                            <option value='img'>img</option>\n                            <option value='status'>status</option>\n                          </select >\n                          <input\n                                  name=\"data\"\n                                  onChange={(e)=> this.handleChange(e)}\n                                  autoComplete=\"off\"\n                                  placeholder='enter the new data here'\n                                  type=\"text\"/>\n                          <button type=\"submit\">change</button>\n                        </form>\n                      </div>\n                    }\n\n            <Link to=\"/characters\">  <button>back to characters</button>  </Link>\n\n          </div>\n\n        }\n        <div className=\"\">\n            <h6>This is a practice of Matías Dentoni | \"I thank the creators of this exercise that has helped me to train myself in JS / REACT / REDUX / AJAX / POSTGREE / SQL / SEQUELIZE and the processes of Routing, Bundlers, Life Cycle Components\"</h6>\n        </div>\n        </div>\n      );\n    };\n};\n\n\nexport const mapStateToProps = (state) => {\n    return {\n        characterDetail: state.characterDetail\n    }\n};\n\nexport const mapDispatchToProps = (dispatch) =>{\n    return {\n        emptyCharacterDetail: () => dispatch(emptyCharacterDetail()),\n        getCharacterDetail: (id) => dispatch(getCharacterDetail(id)),\n        changeAtrib: (attribute, id, valor)=> dispatch(changeAtrib(attribute, id, valor))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterDetail);\n\n\n\n// function CharacterDetail() {\n//\n//   const dispatch = useDispatch();\n//   let characterDetail = useSelector(state=> state.characterDetail);\n//   const {id} = useParams();\n//   const [attribute, setAttribute] = React.useState('');\n//   const [data, setData] = React.useState('');\n//   //const id = match.params.id; // Alternativa\n//   useEffect(()=>{\n//     dispatch(emptyCharacterDetail());\n//     dispatch(getCharacterDetail(id)) // getCharacterDetail(match.params.id)\n//   },[id, dispatch]);\n//\n//   const handleChange = (e) => {\n//     e.preventDefault();  // console.log(e.target.value);\n//     setData(e.target.value);\n//   };\n//   const handleSelect = (e) => {\n//     e.preventDefault();  // console.log(e.target.value);\n//     setAttribute(e.target.value)\n//   }\n//   const handleSubmit = (e)=> {\n//     // e.preventDefault();\n//     // console.log(attribute);  console.log(data);\n//     let objError = validateChg({[attribute]: data});\n//     if (objError.name || objError.nickname || objError.birthday || objError.img || objError.status ) {\n//       alert(`Danger: ${ JSON.stringify(objError) } !!!`); // console.log(objError);\n//     } else {\n//       dispatch(changeAtrib(attribute, characterDetail.char_id, data));\n//       console.log(\"dispacho en cambio de atributo\");\n//     };\n//   }\n//\n//   return (\n//     <div className=\"CharacterDetail\" key=\"character\">\n//       <h1>Character Details</h1>\n//       {!characterDetail ?  <Spinner/> :\n//       <div key='detail'>\n//\n//         <h3>{characterDetail.name}</h3>\n//\n//         <img className=\"CharacterDetail__Photo\" src={characterDetail.img} alt=\"\" />\n//\n//         <p>nickname: {characterDetail.nickname}</p>\n//         <p>birthday: {characterDetail.birthday}</p>\n//         <p>status: {characterDetail.status}</p>\n//         <div key='ocuppations'>\n//           <p>occupations: </p>\n//           <h5>\n//           {\n//             !characterDetail.occupation ? <Spinner/> :\n//               characterDetail.occupation.map(o=> ' - ' + o + ' - ')\n//           }\n//           </h5>\n//         </div>\n//\n//                 {\n//                   (!characterDetail.created_DB) ?  null :\n//                   <div className='change'>\n//                     <h3>modify character attributes</h3>\n//\n//                     <form className='formChange'  onSubmit={(e)=>handleSubmit(e)}>\n//                       <select onChange={(e)=> handleSelect(e)}>\n//                         <option value='none'>none</option>\n//                         <option value='name'>name</option>\n//                         <option value='nickname'>nickname</option>\n//                         <option value='birthday'>birthday</option>\n//                         <option value='img'>img</option>\n//                         <option value='status'>status</option>\n//                       </select >\n//                       <input\n//                               name=\"data\"\n//                               onChange={(e)=>handleChange(e)}\n//                               autoComplete=\"off\"\n//                               placeholder='enter the new data here'\n//                               type=\"text\"/>\n//                       <button type=\"submit\">change</button>\n//                     </form>\n//                   </div>\n//                 }\n//\n//         <Link to=\"/characters\">  <button>back to characters</button>  </Link>\n//\n//       </div>\n//\n//     }\n//     </div>\n//   );\n// }\n// export default CharacterDetail;\n","export default function validate(i) {\r\n  let errors = {};\r\n\r\n  if (i.nickname) {\r\n    if (!/([A-Z])\\w+/g.test(i.nickname)) {\r\n      errors.nickname = '* nickname requires at least one uppercase letter'\r\n    } else if (!/(?=.*[0-9])/.test(i.nickname)) {\r\n      errors.nickname = '* nickname must have at least one number between 0 and 9'\r\n    } else if (i.nickname.length >15 || i.nickname.length <3) {\r\n      errors.nickname = '* nickname must be between 3 and 15 characters long'\r\n    } else if (!/(?=.*[@$?¡\\-%()!¿*#_])/.test(i.nickname)) {\r\n      errors.nickname = 'nickname must have at least one special character'\r\n    }\r\n  };\r\n\r\n  if (i.birthday) {\r\n    if (!/^(0?[1-9]|[12]\\d|3[01])[-|.|/](0?[1-9]|1[0-2])[-|.|/](19|20)\\d{2}$/.test(i.birthday)) {\r\n      errors.birthday = '* invalid date'\r\n    }\r\n  };\r\n\r\n  if (i.img) {\r\n    if ( !i.img.includes('www.') && !i.img.includes('http:/') && !i.img.includes('https:/') ) {\r\n      errors.img = '* Image must be a url'\r\n    }\r\n  };\r\n\r\n  return errors;\r\n};\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport {getEpisodes} from '../actions';\nimport s from \"../styles/Episodes.module.css\";\n// import Spinner from \"./Spinner\";\n\nfunction Episodes(props) {\n\n  let allEpisodes = useSelector(state=> state.episodes);\n  const dispatch = useDispatch();\n  let [episodes, setEpisodes] = React.useState([]);\n\n  useEffect(()=>{\n    dispatch(getEpisodes())\n  },[dispatch]);\n\n\n  function orderEpisodes(ep, ss) {\n    let arr = ss.split('');  console.log(arr);\n    let s = arr.shift(); console.log(s);\n    let ser = arr.join(''); console.log(ser);\n    return ep.filter(e=> e.season === s && e.series === ser)\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    let segm = orderEpisodes(allEpisodes, e.target.value);\n    setEpisodes(segm);\n  }\n\n  return (\n    <div className={s.Episodes}>\n      <div className={s.boxFlex}>\n        <h5>Total number of episodes:  102</h5>\n        <h5>Number of seasons:  5</h5>\n        <h5>Number of characters:  61</h5>\n      </div>\n      <div className={s.containnn}>\n        <div className={s.line}></div>\n        <div className={s.title}> <h1>Breaking Bad</h1> </div>\n        <div className={s.boxFlex}>\n          <div className={s.but}>\n            <button value=\"1Breaking Bad\" onClick={(e)=>handleClick(e)}>Season 1</button>\n          </div>\n          <div className={s.but}>\n            <button value=\"2Breaking Bad\" onClick={(e)=>handleClick(e)}>Season 2</button>\n          </div>\n          <div className={s.but}>\n            <button value=\"3Breaking Bad\" onClick={(e)=>handleClick(e)}>Season 3</button>\n          </div>\n          <div className={s.but}>\n            <button value=\"4Breaking Bad\" onClick={(e)=>handleClick(e)}>Season 4</button>\n          </div>\n          <div className={s.but}>\n            <button value=\"5Breaking Bad\" onClick={(e)=>handleClick(e)}>Season 5</button>\n          </div>\n        </div>\n        <div className={s.line}></div>\n        <div className={s.title}> <h1>Better Call Saul</h1> </div>\n        <div className={s.boxFlex}>\n          <div className={s.but}>\n            <button value=\"1Better Call Saul\" onClick={(e)=>handleClick(e)}>Season 1</button>\n          </div>\n          <div className={s.but}>\n            <button value=\"2Better Call Saul\" onClick={(e)=>handleClick(e)}>Season 2</button>\n          </div>\n          <div className={s.but}>\n            <button value=\"3Better Call Saul\" onClick={(e)=>handleClick(e)}>Season 3</button>\n          </div>\n          <div className={s.but}>\n            <button value=\"4Better Call Saul\" onClick={(e)=>handleClick(e)}>Season 4</button>\n          </div>\n        </div>\n        <div className={s.line}></div>\n        <div className={s.title}> <h1>Episodes List</h1> </div>\n        <div className={s.boxFlex}>\n          <ul className={s.Episodes__list}>\n            {\n              episodes.length < 1  ? null :\n              <h3>Tap the episode for more details</h3>\n            }\n            {\n            episodes.length < 1  ? 'tap the session button to watch your episodes' :\n            episodes.map((episode, index)=>{\n              if(episode.series){\n                return (\n                  <li className={s.items} key={index}>\n                    <Link key={index} to={`/episodes/${episode.episode_id}`}>\n                      {`${episode.episode} - ${episode.title}`}\n                    </Link>\n                  </li>\n                )\n              };\n              return (<li> error </li>)\n            })\n            }\n          </ul>\n        </div>\n\n      </div>\n      <div className={s.pie}>\n          <h6>This is a practice of Matías Dentoni | \"I thank the creators of this exercise that has helped me to train myself in JS / REACT / REDUX / AJAX / POSTGREE / SQL / SEQUELIZE and the processes of Routing, Bundlers, Controlled Forms, Life Cycle Components\"</h6>\n      </div>\n    </div>\n  );\n};\nexport default Episodes;\n\n// //===========================================//\n//\n// function mapStateToProps(state){\n//   return {\n//     ...state\n//   }\n// }\n//\n//\n// //Actions\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     getEpisodes: () => dispatch(getEpisodes())\n//   }\n// }\n//\n// //===========================================//\n//\n// export default connect (mapStateToProps,mapDispatchToProps)(Episodes);\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";  //  , useParams\nimport {emptyEpisodeDetail, getEpisodeDetail} from \"../actions\";\n// import {connect} from \"react-redux\";\nimport Spinner from './Spinner'\nimport s from \"../styles/EpisodeDetail.module.css\";\n\nfunction EpisodeDetail(props) {\n\n  const dispatch = useDispatch();\n  let episodeDetail = useSelector(state=> state.episodeDetail);\n  // const {id} = useParams();\n  const id = props.match.params.id\n\n  useEffect(()=>{\n    dispatch(emptyEpisodeDetail())\n    dispatch(getEpisodeDetail(id))\n  },[id, dispatch])\n  /*\n    PISTA: podemos obtener lo que llegue por parametros con el hook useParams.\n    Que hace useParams? https://reactrouter.com/web/example/url-params\n    */\n\n  return (\n  <div className={s.bgk} key='episode'>\n    <div className={s.EpisodeDetailContainer} key='episode'>\n      <h1>Episode Details</h1>\n      {\n      !episodeDetail ?  <Spinner/>  :\n        <div className={s.EpisodeDetailData}>\n\n          <h2>{episodeDetail.title}</h2>\n          <h3>Episode: {episodeDetail.episode}</h3>\n          <h3>Season: {episodeDetail.season}</h3>\n          <h3>Series: {episodeDetail.series}</h3>\n          <h3>Aired: {episodeDetail.air_date}</h3>\n          <h3>Characters: </h3>\n          <ul>\n          {\n              episodeDetail.characters && episodeDetail.characters.map((character, index) =>\n              <li key={index}>{character}</li>)\n          }\n          </ul>\n        </div>\n      }\n      <Link to=\"/episodes\">  <button>back to episodes</button>  </Link>\n      <br/>\n      <div className=\"\">\n          <h6>This is a practice of Matías Dentoni | \"I thank the creators of this exercise that has helped me to train myself in JS / REACT / REDUX / AJAX / POSTGREE / SQL / SEQUELIZE and the processes of Routing, Bundlers, Life Cycle Components\"</h6>\n      </div>\n    </div>\n  </div>\n  );\n}\nexport default EpisodeDetail;\n\n// function mapStateToProps(state){\n//   return {\n//     ...state\n//   }\n// }\n//\n//\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     emptyEpisodeDetail:() => dispatch(emptyEpisodeDetail()),\n//     getEpisodeDetail: (id) => dispatch(getEpisodeDetail(id))\n//   }\n// }\n//\n// export default connect(mapStateToProps,mapDispatchToProps)(EpisodeDetail);\n","export default function validate(i) {\r\n  let errors = {};\r\n\r\n  (i.name.length < 1) ?\r\n    errors.name = '* requiere name' : errors.name ='';\r\n\r\n  if (i.nickname.length < 1) { errors.nickname = '* requiere nickname'\r\n  } else if (!/([A-Z])\\w+/g.test(i.nickname)) {\r\n    errors.nickname = '* nickname requires at least one uppercase letter'\r\n  } else if (!/(?=.*[0-9])/.test(i.nickname)) {\r\n    errors.nickname = '* nickname must have at least one number between 0 and 9'\r\n  } else if (i.nickname.length >15 || i.nickname.length <3) {\r\n    errors.nickname = '* nickname must be between 3 and 15 characters long'\r\n  } else if (!/(?=.*[@$?¡\\-%()!¿*#_])/.test(i.nickname)) {\r\n    errors.nickname = 'nickname must have at least one special character'\r\n  } else { errors.nickname ='' };\r\n\r\n  if (i.birthday.length < 1) { errors.birthday = '* requiere birthday'\r\n} else if (!/^(0?[1-9]|[12]\\d|3[01])[-|.|/](0?[1-9]|1[0-2])[-|.|/](19|20)\\d{2}$/.test(i.birthday)) {\r\n    errors.birthday = '* invalid date'\r\n  } else { errors.birthday = '' };\r\n\r\n  if (i.img.length < 1) { errors.img = '* requiere img'\r\n} else if ( !i.img.includes('www.') && !i.img.includes('http:/') && !i.img.includes('https:/') ) {\r\n    errors.img = '* Image must be a url'\r\n  } else { errors.img = '' };\r\n\r\n  (i.status.length < 1) ? errors.status = '* requiere status' : errors.status = '';\r\n\r\n  (i.occupations.length < 1) ?\r\n    errors.occupations = '* requiere occupations' : errors.occupations = '';\r\n\r\n  return errors;\r\n};\r\n","// import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import validate from '../Utils/validateErr.js';\r\n// import { Link } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validate from '../Utils/validate.js';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postCharacters, getOccupations } from '../actions';\r\nimport s from '../styles/CreateChar.module.css';\r\n\r\n\r\nexport default function CreateChar () {\r\n\r\n  const dispatch = useDispatch();\r\n  const occupationsStore = useSelector((state)=>state.occupations);\r\n  const history = useHistory();\r\n\r\n  const [input, setInput] = useState({\r\n    name:'',\r\n    nickname:'',\r\n    birthday:'',\r\n    img:'',\r\n    status:'',\r\n    occupations: []\r\n  });\r\n  const [error, setError] = useState({\r\n    name:'', nickname:'', birthday:'', img:'', status:'', occupations:''\r\n  });\r\n\r\n  useEffect(()=>{\r\n    dispatch(getOccupations());\r\n  },[dispatch]);\r\n\r\n  function handleChange(e) {\r\n    setInput({\r\n        ...input,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    setError(validate(input));\r\n  };\r\n  function handleCheck (e) {\r\n    e.preventDefault();\r\n    setInput({\r\n      ...input,\r\n      status: e.target.value\r\n    });\r\n    setError(validate(input));\r\n  };\r\n  function handleSelect (e) {\r\n    e.preventDefault();\r\n    if (!input.occupations.includes(e.target.value)) {\r\n      setInput({\r\n        ...input,\r\n        occupations: [...input.occupations, e.target.value]\r\n      });\r\n    };\r\n    setError(validate(input));\r\n  };\r\n  function handleDelete(e) {\r\n    setInput({\r\n      ...input,\r\n      occupations: input.occupations.filter( (o)=> o !== e.target.value)\r\n    });\r\n    setError(validate(input));\r\n  };\r\n  function resetStatus() {\r\n    setInput({\r\n      ...input,\r\n      status: ''\r\n    });\r\n    setError(validate(input));\r\n  };\r\n  function handleSubmit (e) {\r\n    e.preventDefault();\r\n    if (error.name || error.nickname || error.birthday || error.img || error.status || error.occupations ) {\r\n      alert('Danger: review the data. Errors were found !!!')\r\n    } else {\r\n      dispatch(postCharacters(input));\r\n      alert('characters created');\r\n      setInput({ name:'', nickname:'', birthday:'', img:'', status:'', occupations: [] });\r\n      history.push('/characters'); // se usa para rederigir desde el código\r\n    };\r\n  };\r\n  function checking(){\r\n    setTimeout(function(){\r\n        setError(validate(input));\r\n    }, 2000);\r\n    alert('Advance. If the \"add character\" button appears, click it. Otherwise check the data, correct if necessary and check again.')\r\n  };\r\n\r\n  return(\r\n    <div className={s.bakg}>\r\n      <div className={`${s.cont2}`}>\r\n        <div className={`${s.bannerText}`} key='bt'>create new character</div>\r\n      </div>\r\n      <form className={`${s.cards}`} onSubmit={(e)=>handleSubmit(e)}>\r\n\r\n          <div className={s.cont3}>\r\n\r\n            <div className={`${s.inpt}`} key='n'> Name: |\r\n              <input\r\n                      name=\"name\" value={input.name}\r\n                      onChange={(e)=>handleChange(e)}\r\n                      className={error.name?`${s.dangerInp}`:`${s.validInp}`}\r\n                      autoComplete=\"off\"\r\n                      type=\"text\"/>\r\n              <div className={error.name?`${s.danger}`:`${s.valid}`}>\r\n                {error.name || 'valid data'}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={s.inpt} key='a'> Nickname: |\r\n              <input\r\n                      name=\"nickname\" value={input.nickname}\r\n                      onChange={(e)=>handleChange(e)}\r\n                      className={error.nickname?`${s.dangerInp}`:`${s.validInp}`}\r\n                      autoComplete=\"off\"\r\n                      type=\"text\"/>\r\n              <div className={error.nickname?`${s.danger}`:`${s.valid}`}>\r\n                {error.nickname || 'valid data'}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={s.inpt} key='b'> Birthday: |\r\n              <input\r\n                      name=\"birthday\" value={input.birthday}\r\n                      onChange={(e)=>handleChange(e)}\r\n                      className={error.birthday?`${s.dangerInp}`:`${s.validInp}`}\r\n                      autoComplete=\"off\"\r\n                      type=\"text\"/>  (DD-MM-YYYY)\r\n              <div className={error.birthday?`${s.danger}`:`${s.valid}`}>\r\n                {error.birthday || 'valid data'}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${s.inpt}`} key='i'> Image: |\r\n                        <input\r\n                              name=\"img\" value={input.img}\r\n                              onChange={(e)=>handleChange(e)}\r\n                              className={error.img?`${s.dangerInp}`:`${s.validInp}`}\r\n                              autoComplete=\"off\"\r\n                              type=\"text\"  />\r\n              <div className={error.img?`${s.danger}`:`${s.valid}`}>\r\n                {error.img || 'valid data'}\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className={s.cont4}>\r\n          {\r\n            (error.name || error.nickname || error.birthday || error.img || error.status || error.occupations ) ?\r\n\r\n              <button onClick={()=>checking()}>pre-error checking</button>\r\n              :\r\n              <div className={s.inpt} key='s'>\r\n                <button type=\"submit\">Add Character</button>\r\n              </div>\r\n          }\r\n          {/*<div className={`${s.inpt}`}>\r\n            <input type=\"reset\" value=\"restore form\"/>\r\n          </div>*/}\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <select onChange={(e)=> handleSelect(e)}>\r\n        {\r\n          occupationsStore.map(o=> <option key={`s${o.id}`} value={o.name}> {o.name} </option>)\r\n        }\r\n      </select >\r\n      { input.occupations?.map( (el, index) =>\r\n        <div className={s.dsdfd} key={`o${index}`}>\r\n          <p>{el}</p>\r\n          <button  value={el} onClick={(e)=>handleDelete(e)}>X</button>\r\n        </div>)\r\n      }\r\n      <div className={error.occupations?`${s.danger}`:`${s.valid}`}>\r\n        {error.occupations || 'valid data'}\r\n      </div>\r\n\r\n      <div className={`${s.inpt}`} key='s'> Status:\r\n          { (input.status !== '') ?\r\n              <button  onClick={()=>resetStatus()}>Restart Options</button>\r\n\r\n              :\r\n\r\n              <div>\r\n                  <label key=\"Ali\"><input\r\n                      name=\"Alive\"  value=\"Alive\"\r\n                      onChange={(e)=>handleCheck(e)}\r\n                      type=\"checkbox\"/>Alive</label>\r\n                  <label key=\"Des\"><input\r\n                      name=\"Deseased\"  value=\"Deseased\"\r\n                      onChange={(e)=>handleCheck(e)}\r\n                      type=\"checkbox\"/>Deseased</label>\r\n                  <label key='Unk'><input\r\n                      name='Unknown'  value='Unknown'\r\n                      onChange={(e)=>handleCheck(e)}\r\n                      type=\"checkbox\"/>Unknown</label>\r\n                  <label key=\"Pres\"><input\r\n                      name='Presumed dead' value='Presumed dead'\r\n                      onChange={(e)=>handleCheck(e)}\r\n                      type=\"checkbox\"/>Presumed dead</label>\r\n              </div>\r\n          }\r\n\r\n        <div className={error.status?`${s.danger}`:`${s.valid}`}>\r\n          {error.status || 'valid data'}\r\n        </div>\r\n    </div>\r\n    <br/>\r\n    <div className={s.pie}>\r\n        <h6>This is a practice of Matías Dentoni | \"I thank the creators of this exercise that has helped me to train myself in JS / REACT / REDUX / AJAX / POSTGREE / SQL / SEQUELIZE and the processes of Routing, Bundlers, Controlled Forms\"</h6>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n// export class CreateChar extends Component {\r\n//\r\n//     constructor(props) {\r\n//       super(props);\r\n//       this.state = {\r\n//         name:'',\r\n//         nickname:'',\r\n//         birthday:'',\r\n//         img:'',\r\n//         status:'',\r\n//         occupations: [],\r\n//         nameErr:'',\r\n//         nicknameErr:'',\r\n//         birthdayErr:'',\r\n//         imgErr:'',\r\n//         statusErr:'',\r\n//         occupationsErr: ''\r\n//       };\r\n//       // this.ejectClose = this.ejectClose.bind(this);\r\n//     };\r\n//\r\n//     componentDidMount(){\r\n//         this.props.getOccupations();\r\n//     };\r\n//\r\n//      handleChange = (e)=>{\r\n//       this.setState({\r\n//           ...this.state,\r\n//           [e.target.name]: e.target.value,\r\n//         });\r\n//       let err =  validate(this.state)\r\n//       this.setState({\r\n//             ...this.state,\r\n//             ...err\r\n//           });\r\n//     };\r\n//      handleCheck = (e)=>{\r\n//       e.preventDefault();\r\n//       this.setState({\r\n//         ...this.state,\r\n//         status: e.target.value\r\n//       });\r\n//       let err =  validate(this.state)\r\n//       this.setState({\r\n//             ...this.state,\r\n//             ...err\r\n//           });\r\n//     };\r\n//      handleSelect = (e)=>{\r\n//       e.preventDefault();\r\n//       if (!this.state.occupations.includes(e.target.value)) {\r\n//         this.setState({\r\n//           ...this.state,\r\n//           occupations: [...this.state.occupations, e.target.value]\r\n//         });\r\n//       };\r\n//       let err =  validate(this.state)\r\n//       this.setState({\r\n//             ...this.state,\r\n//             ...err\r\n//           });\r\n//     };\r\n//      handleDelete = (e)=>{\r\n//       this.setState({\r\n//         ...this.state,\r\n//         occupations: this.state.occupations.filter( (o)=> o !== e.target.value)\r\n//       });\r\n//       let err =  validate(this.state)\r\n//       this.setState({\r\n//             ...this.state,\r\n//             ...err\r\n//           });\r\n//     };\r\n//      resetStatus = ()=>{\r\n//       this.setState({\r\n//         ...this.state,\r\n//         status: ''\r\n//       });\r\n//       let err =  validate(this.state)\r\n//       this.setState({\r\n//             ...this.state,\r\n//             ...err\r\n//           });\r\n//     };\r\n//      handleSubmit = (e)=>{\r\n//       e.preventDefault();\r\n//       if (this.state.nameErr || this.state.nicknameErr || this.state.birthdayErr || this.state.imgErr || this.state.statusErr || this.state.occupationsErr ) {\r\n//         alert('Danger: review the data. this.state were found !!!')\r\n//       } else {\r\n//         let char = {\r\n//           name: this.state.name,\r\n//           nickname: this.state.nickname,\r\n//           birthday: this.state.birthday,\r\n//           img: this.state.img,\r\n//           status: this.state.status,\r\n//           occupations: this.state.occupations,\r\n//         }\r\n//         this.props.postCharacters(char);\r\n//         alert('characters created');\r\n//         this.setState({ name:'', nickname:'', birthday:'', img:'', status:'', occupations: [] });\r\n//\r\n//         };\r\n//     };\r\n//      checking = ()=>{\r\n//       setTimeout(function(){\r\n//         let err =  validate(this.state)\r\n//         this.setState({\r\n//               ...this.state,\r\n//               ...err\r\n//             });\r\n//       }, 2000);\r\n//       alert('Advance. If the \"add character\" button appears, click it. Otherwise check the data, correct if necessary and check again.')\r\n//     };\r\n//\r\n//     render() {\r\n//       return (\r\n//         <div className={s.bakg}>\r\n//           <div className={`${s.cont2}`}>\r\n//             <div className={`${s.bannerText}`} key='bt'>create new character</div>\r\n//           </div>\r\n//           <form className={`${s.cards}`} onSubmit={(e)=>this.handleSubmit(e)}>\r\n//\r\n//               <div className={s.cont3}>\r\n//\r\n//                 <div className={`${s.inpt}`} key='n'> Name: |\r\n//                   <input\r\n//                           name=\"name\" value={this.state.name}\r\n//                           onChange={(e)=>this.handleChange(e)}\r\n//                           className={this.state.nameErr?`${s.dangerInp}`:`${s.validInp}`}\r\n//                           autoComplete=\"off\"\r\n//                           type=\"text\"/>\r\n//                   <div className={this.state.nameErr?`${s.danger}`:`${s.valid}`}>\r\n//                     {this.state.nameErr || 'valid data'}\r\n//                   </div>\r\n//                 </div>\r\n//\r\n//                 <div className={s.inpt} key='a'> Nickname: |\r\n//                   <input\r\n//                           name=\"nickname\" value={this.state.nickname}\r\n//                           onChange={(e)=>this.handleChange(e)}\r\n//                           className={this.state.nicknameErr?`${s.dangerInp}`:`${s.validInp}`}\r\n//                           autoComplete=\"off\"\r\n//                           type=\"text\"/>\r\n//                   <div className={this.state.nicknameErr?`${s.danger}`:`${s.valid}`}>\r\n//                     {this.state.nicknameErr || 'valid data'}\r\n//                   </div>\r\n//                 </div>\r\n//\r\n//                 <div className={s.inpt} key='b'> Birthday: |\r\n//                   <input\r\n//                           name=\"birthday\" value={this.state.birthday}\r\n//                           onChange={(e)=>this.handleChange(e)}\r\n//                           className={this.state.birthdayErr?`${s.dangerInp}`:`${s.validInp}`}\r\n//                           autoComplete=\"off\"\r\n//                           type=\"text\"/>  (DD-MM-YYYY)\r\n//                   <div className={this.state.birthdayErr?`${s.danger}`:`${s.valid}`}>\r\n//                     {this.state.birthdayErr || 'valid data'}\r\n//                   </div>\r\n//                 </div>\r\n//\r\n//                 <div className={`${s.inpt}`} key='i'> Image: |\r\n//                             <input\r\n//                                   name=\"img\" value={this.state.img}\r\n//                                   onChange={(e)=>this.handleChange(e)}\r\n//                                   className={this.state.imgErr?`${s.dangerInp}`:`${s.validInp}`}\r\n//                                   autoComplete=\"off\"\r\n//                                   type=\"text\"  />\r\n//                   <div className={this.state.imgErr?`${s.danger}`:`${s.valid}`}>\r\n//                     {this.state.imgErr || 'valid data'}\r\n//                   </div>\r\n//                 </div>\r\n//\r\n//             </div>\r\n//\r\n//             <div className={s.cont4}>\r\n//               {\r\n//                 (this.state.nameErr || this.state.nicknameErr || this.state.birthdayErr || this.state.imgErr || this.state.statusErr || this.state.occupationsErr ) ?\r\n//\r\n//                   <button onClick={()=>this.checking()}>pre-this.state checking</button>\r\n//                   :\r\n//                   <div className={s.inpt} key='s'>\r\n//                     <button type=\"submit\">Add Character</button>\r\n//                   </div>\r\n//               }\r\n//               {/*<div className={`${s.inpt}`}>\r\n//                 <this.state type=\"reset\" value=\"restore form\"/>\r\n//               </div>*/}\r\n//             </div>\r\n//\r\n//           </form>\r\n//\r\n//           <select onChange={(e)=> this.handleSelect(e)}>\r\n//             {\r\n//               this.props.occupationsStore.map(o=> <option key={`s${o.id}`} value={o.name}> {o.name} </option>)\r\n//             }\r\n//           </select >\r\n//           { this.state.occupations.length === 0 ? null :\r\n//             this.state.occupations.map( (el, index) => {\r\n//               return (\r\n//             <div className={s.dsdfd} key={`o${index}`}>\r\n//               <p>{el}</p>\r\n//               <button  value={el} onClick={(e)=>this.handleDelete(e)}>X</button>\r\n//             </div>)})\r\n//           }\r\n//           <div className={this.state.occupationsErr?`${s.danger}`:`${s.valid}`}>\r\n//             {this.state.occupationsErr || 'valid data'}\r\n//           </div>\r\n//\r\n//           <div className={`${s.inpt}`} key='s'> Status: |\r\n//               { (this.state.statusErr !== '') ?\r\n//                   <button  onClick={()=>this.resetStatus()}>Restart Options</button>\r\n//\r\n//                   :\r\n//\r\n//                   <div>\r\n//                       <label key=\"Ali\"><input\r\n//                           name=\"Alive\"  value=\"Alive\"\r\n//                           onChange={(e)=>this.handleCheck(e)}\r\n//                           type=\"checkbox\"/>Alive</label>\r\n//                       <label key=\"Des\"><input\r\n//                           name=\"Deseased\"  value=\"Deseased\"\r\n//                           onChange={(e)=>this.handleCheck(e)}\r\n//                           type=\"checkbox\"/>Deseased</label>\r\n//                       <label key='Unk'><input\r\n//                           name='Unknown'  value='Unknown'\r\n//                           onChange={(e)=>this.handleCheck(e)}\r\n//                           type=\"checkbox\"/>Unknown</label>\r\n//                       <label key=\"Pres\"><input\r\n//                           name='Presumed dead' value='Presumed dead'\r\n//                           onChange={(e)=>this.handleCheck(e)}\r\n//                           type=\"checkbox\"/>Presumed dead</label>\r\n//                   </div>\r\n//               }\r\n//\r\n//             <div className={this.state.statusErr?`${s.danger}`:`${s.valid}`}>\r\n//               {this.state.statusErr || 'valid data'}\r\n//             </div>\r\n//         </div>\r\n//         <Link to=\"/characters\">  <button>back to characters</button>  </Link>\r\n//       </div>\r\n//       )\r\n//     }\r\n//\r\n// };\r\n//\r\n// export const mapStateToProps = (state) => {\r\n//     return {\r\n//         occupationsStore: state.occupations\r\n//     }\r\n// };\r\n//\r\n// export const mapDispatchToProps = (dispatch) =>{\r\n//     return {\r\n//         getOccupations: () => dispatch(getOccupations()),\r\n//         postCharacters: (ch)=> dispatch(postCharacters(ch))\r\n//     }\r\n// };\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(CreateChar);\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport Characters from './components/Characters';\nimport CharacterDetail from './components/CharacterDetail';\nimport Episodes from './components/Episodes';\nimport EpisodeDetail from './components/EpisodeDetail';\nimport CreateChar from './components/CreateChar';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path = \"/\" component = {NavBar}/>\n      <Route exact path = \"/\" component = {Home}/>\n      <Route exact path = \"/characters/:id\" component = {CharacterDetail}/>\n      <Route exact path = \"/characters\" component = {Characters}/>\n      <Route exact path = \"/create\" component = {CreateChar}/>\n      <Route exact path = \"/episodes\" component = {Episodes}/>\n      <Route exact path = \"/episodes/:id\" component = {EpisodeDetail}/>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_QUOTE,\n    GET_CHARACTERS,\n    GET_CHARACTER_DETAIL,\n    GET_EPISODES,\n    EMPTY_CHARACTER_DETAIL,\n    GET_EPISODE_DETAIL,\n    EMPTY_EPISODE_DETAIL,\n    FILTER_BY_VALUES,\n    FILTER_CREATED,\n    ORDER_BY_NAME,\n    GET_NAME_CHAR,\n    POST_CHARACTER,\n    GET_OCCUPATIONS,\n    GET_API_CHARS,\n    GET_DB_CHARS,\n    REMOVE_CHAR,\n    CLOSE_CHAR,\n    CHANGE_AT}\n     from \"../actions\";\n\n//==== Setear Estado Global Inicial ======//\n\nconst initialState = {\n    quote : {},\n    characters: [],\n    allCharacters: [],\n    apiChars: [],\n    dbChars: [],\n    characterDetail: {},\n    outIDcharacter: {},\n    episodes: [],\n    episodeDetail:{},\n    occupations: []\n}\n\n//==== Setear Reducers ======//\nfunction rootReducer(state = initialState, action){\n    if(action.type === ADD_QUOTE){\n        return {\n            ...state,\n            quote: action.payload\n        }\n    }\n    if(action.type === GET_API_CHARS){\n        return {\n            ...state,\n            characters: action.payload,\n            apiChars: action.payload,\n            allCharacters: [...state.dbChars, ...action.payload]\n        }\n    }\n    if(action.type === GET_DB_CHARS){\n        return {\n            ...state,\n            dbChars: action.payload\n        }\n    }\n    if(action.type === GET_CHARACTERS){\n        return {\n            ...state,\n            characters: state.allCharacters\n        }\n    }\n    if(action.type === GET_CHARACTER_DETAIL){\n        return {\n            ...state,\n            characterDetail: action.payload\n        }\n    }\n    if(action.type === EMPTY_CHARACTER_DETAIL) {\n        return {\n            ...state,\n            characterDetail:{}\n        }\n    }\n    if(action.type === GET_EPISODES){\n        return {\n            ...state,\n            episodes: action.payload\n        }\n    }\n    if(action.type === GET_EPISODE_DETAIL){\n        return {\n            ...state,\n            episodeDetail:action.payload\n        }\n    }\n    if(action.type === EMPTY_EPISODE_DETAIL){\n        return {\n            ...state,\n            episodeDetail:{}\n        }\n    }\n    if(action.type === FILTER_BY_VALUES){\n        let allCharacters = state.allCharacters;\n        let statusFilter = action.payload === 'All' ?\n                allCharacters :\n                allCharacters.filter( (el)=> el.status === action.payload )\n        return {\n            ...state,\n            characters: statusFilter\n        }\n    }\n    if(action.type === FILTER_CREATED){\n      let allChs = state.allCharacters;\n      let createdFilter = (action.payload === 'created') ?\n        allChs.filter( (el)=> el.char_id.includes('-') ) :\n        allChs.filter( (el)=> !el.char_id.includes('-') )\n \n        return {\n          ...state,\n          characters: createdFilter\n        }\n    }\n    if(action.type === ORDER_BY_NAME){\n        const sortedArr = action.payload === 'ascending order' ?\n                state.allCharacters.sort( function(x,y) {\n                    if (x.name < y.name) return -1;\n                    if (x.name > y.name) return 1;\n                    return 0;\n                  })  :\n              state.allCharacters.sort( function(x,y) {\n                  if (x.name < y.name) return 1;\n                  if (x.name > y.name) return -1;\n                  return 0;\n                });\n\n        return {\n            ...state,\n            characters: sortedArr\n        }\n    }\n    if(action.type === GET_NAME_CHAR){\n        return {\n            ...state,\n            characters: action.payload\n        }\n    }\n    if(action.type === POST_CHARACTER){\n        return {\n            ...state,\n            newChar: action.payload\n        }\n    }\n    if(action.type === GET_OCCUPATIONS){\n        return {\n            ...state,\n            occupations: action.payload\n        }\n    }\n    if(action.type === REMOVE_CHAR){\n        return {\n            ...state,\n            characters: state.characters.filter(c=> c.char_id !== action.payload.id),\n            allCharacters: state.allCharacters.filter(c=> c.char_id !== action.payload.id),\n            outIDcharacter: action.payload.id\n        }\n    }\n    if(action.type === CLOSE_CHAR){\n        return {\n            ...state,\n            characters: state.characters.filter(c=> c.char_id !== action.payload.id),\n            allCharacters: state.allCharacters.filter(c=> c.char_id !== action.payload.id),\n            outIDcharacter: action.payload\n        }\n    }\n    if(action.type === CHANGE_AT){\n      let chars = state.characters.filter(c=> c.char_id !== action.payload.id);\n      let allChars = state.allCharacters.filter(c=> c.char_id !== action.payload.id);\n      return {\n        ...state,\n        characters: [...chars, action.payload],\n        allCharacters: [...allChars, action.payload]\n      }\n    }\n\n    return state;\n\n}\n\n\nexport default rootReducer;\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    // applyMiddleware(thunk)\n)\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_API || \"http://localhost:3001\"; // si usaramos axios y no fetch\n\nReactDOM.render(\n  <Provider store = {store}>\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}